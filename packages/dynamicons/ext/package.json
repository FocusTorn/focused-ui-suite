{
    "name": "focused-ui-dynamicons",
    "displayName": "Dynamicons",
    "description": "A dynamic and customizable icon theme for a focused user experience.",
    "version": "0.1.0",
    "private": true,
    "publisher": "New Reality Designs",
    "engines": {
        "vscode": "^1.80.0"
    },
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./dist/extension.js",
    "categories": [
        "Themes"
    ],
    "keywords": [
        "icon theme",
        "theme",
        "icons",
        "dynamicons",
        "focused",
        "ui"
    ],
    "contributes": {
        "iconThemes": [
            {
                "id": "dynamicons-theme",
                "label": "Dynamicons",
                "path": "./assets/themes/dynamicons.theme.json"
            }
        ],
        "commands": [
            {
                "command": "dynamicons.activateIconTheme",
                "title": "Dynamicons: Activate Icon Theme",
                "category": "Dynamicons"
            },
            {
                "command": "dynamicons.assignIcon",
                "title": "Dynamicons: Assign Icon to File/Folder...",
                "category": "Dynamicons",
                "icon": "$(symbol-color)"
            },
            {
                "command": "dynamicons.revertIcon",
                "title": "Dynamicons: Revert Icon Assignment for File/Folder",
                "category": "Dynamicons",
                "icon": "$(discard)"
            },
            {
                "command": "dynamicons.toggleExplorerArrows",
                "title": "Dynamicons: Toggle Explorer Arrow Visibility",
                "category": "Dynamicons"
            },
            {
                "command": "dynamicons.showUserFileIconAssignments",
                "title": "Dynamicons: Show User File Icon Assignments",
                "category": "Dynamicons"
            },
            {
                "command": "dynamicons.showUserFolderIconAssignments",
                "title": "Dynamicons: Show User Folder Icon Assignments",
                "category": "Dynamicons"
            },
            {
                "command": "dynamicons.refreshIconTheme",
                "title": "Dynamicons: Refresh Icon Theme",
                "category": "Dynamicons",
                "icon": "$(refresh)"
            }
        ],
        "configuration": {
            "title": "Dynamicons Icon Theme",
            "properties": {
                "dynamicons.userIconsDirectory": {
                    "type": "string",
                    "default": "",
                    "description": "Path to a directory containing custom user-provided SVG icons. These icons can be assigned using the 'Assign Icon' command.",
                    "scope": "window"
                },
                "dynamicons.customIconMappings": {
                    "type": "object",
                    "default": {},
                    "description": "User-defined custom icon mappings. Keys are typically 'file:filename.ext', 'folder:foldername', or 'language:languageId'. Values are icon definition keys (e.g., '_file', '_myCustomIcon'). Managed by commands; direct editing not recommended.",
                    "scope": "window"
                },
                "dynamicons.hideExplorerArrows": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": true,
                    "description": "Set to true to hide explorer arrows, false to show them. Set to null to use VS Code default. Requires theme refresh/reload.",
                    "scope": "window"
                },
                "dynamicons.baseThemeFileName": {
                    "type": "string",
                    "default": "base.theme.json",
                    "description": "The name of the base theme manifest file within the extension's theme assets directory. Used as a template for the generated theme.",
                    "scope": "window"
                },
                "dynamicons.generatedThemeFileName": {
                    "type": "string",
                    "default": "dynamicons.theme.json",
                    "description": "The name of the final generated theme manifest file within the extension's theme assets directory. This is the file VS Code will load.",
                    "scope": "window"
                }
            }
        }
    },
    "scripts": {
        "check-types": "tsc --noEmit -p tsconfig.json --pretty",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        
        "build:types": "tsc -p tsconfig.json --emitDeclarationOnly",
        "build:js": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --platform=node --format=cjs --external:vscode --external:tsyringe --external:reflect-metadata --external:@focused-ui/dynamicons-core --external:@focused-ui/utilities-core",
        "build": "pnpm run build:js",
        
        "vscode:prepublish": "pnpm run build",
        "package": "vsce package --no-dependencies",
        "publish": "vsce publish --no-dependencies",
        "clean": "rimraf ./dist ./out ./*.vsix"

    },
    "dependencies": {
        "@focused-ui/dynamicons-core": "workspace:*",
        "@focused-ui/utilities-core": "workspace:*",
        "reflect-metadata": "^0.2.2",
        "tsyringe": "^4.10.0"
    },
    "devDependencies": {
        "@types/node": "latest",
        "@types/vscode": "^1.100.0",
        "esbuild": "^0.25.4",
        "rimraf": "^5.0.5",
        "ts-node": "^10.9.2",
        "typescript": "^5.8.3",
        "vsce": "^2.15.0"
    }
}